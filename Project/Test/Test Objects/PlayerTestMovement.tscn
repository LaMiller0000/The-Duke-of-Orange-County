[gd_scene load_steps=7 format=3 uid="uid://b6bu7uoeohwdj"]

[ext_resource type="Script" uid="uid://y21p2rpis0rp" path="res://Scripts/TestSpringArm.gd" id="1"]

[sub_resource type="GDScript" id="3"]
script/source = "extends CharacterBody3D

@onready var _spring_arm: SpringArm3D = $SpringArm3D
@onready var eyes: Node3D = $Eyes
@onready var RotationModel: Node3D = $CollisionShape3D
var gravity = 9.8
var counter = 0
@export var target: Node
@export var speed: int = 20
var _velocity := Vector3.ZERO
var target_position: Vector3 = Vector3.ZERO
var direction = global_position
enum state {TARGETING, FREECAM, ROLLING}
@export var STATED = state.FREECAM
var PREVSTATE = state.FREECAM
var rolling: bool = false

func _physics_process(_delta: float) -> void:
	if Input.is_action_just_released(\"roll\"):
		counter = 0
		if _velocity == Vector3(0, _velocity.y, 0):
			print(_velocity)
			target_position = global_position + RotationModel.basis.z * 10
			pass
		else:
			print(_velocity.rotated(Vector3.UP, _spring_arm.rotation.y).normalized())
			target_position = Vector3(global_position.x + (_velocity.x * 10.0), 0.0, global_position.z + (_velocity.z *10.0))
		rolling = true
	if rolling == true:
		counter += 1
		direction = global_position.direction_to(target_position)
		_velocity = direction
		if global_position.distance_to(target_position) < 1.1 || counter > 24:
			rolling = false
	elif rolling == false:
		_velocity.x = Input.get_action_strength(\"right\") - Input.get_action_strength(\"left\")
		_velocity.z = Input.get_action_strength(\"down\") - Input.get_action_strength(\"up\")
		match STATED:
			state.FREECAM:
				_velocity = _velocity.rotated(Vector3.UP, _spring_arm.rotation.y).normalized()
			state.TARGETING:
				if target == null:
					STATED = state.FREECAM
				else:
					eyes.look_at(target.global_transform.origin, Vector3.DOWN)
					_spring_arm.rotation.y = eyes.rotation.y
					_velocity = _velocity.rotated(Vector3.UP, eyes.rotation.y).normalized()
			_:
				print(\"NOTHING\")
	if _velocity != Vector3(0, _velocity.y, 0):
		RotationModel.rotation.y = Vector2(velocity.z, velocity.x).angle()
	_velocity.y -= gravity * _delta
	set_velocity(_velocity * speed)
	move_and_slide()
	_spring_arm.position = position

func TargetRotationSet():
	RotationModel.rotation.y = 3.14
"

[sub_resource type="CapsuleShape3D" id="1"]

[sub_resource type="CapsuleMesh" id="2"]

[sub_resource type="BoxMesh" id="BoxMesh_s0qaq"]

[sub_resource type="SeparationRayShape3D" id="4"]

[node name="PlayerMovementBody" type="CharacterBody3D"]
script = SubResource("3")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("1")

[node name="CSGMesh3D" type="CSGMesh3D" parent="CollisionShape3D"]
mesh = SubResource("2")

[node name="MeshInstance3D" type="MeshInstance3D" parent="CollisionShape3D"]
transform = Transform3D(0.5, 0, 0, 0, 0.5, 0, 0, 0, 0.5, 0, 0.392764, -0.457116)
mesh = SubResource("BoxMesh_s0qaq")
skeleton = NodePath("../..")

[node name="SpringArm3D" type="SpringArm3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 0.866026, 0.5, 0, -0.5, 0.866026, 0, 0, 5)
shape = SubResource("4")
spring_length = 12.0
margin = 0.5
script = ExtResource("1")

[node name="Camera3D" type="Camera3D" parent="SpringArm3D"]
current = true
fov = 90.0

[node name="Eyes" type="Node3D" parent="."]

[node name="Root" type="Node3D" parent="."]
transform = Transform3D(1.7, 0, 0, 0, 1.7, 0, 0, 0, 1.7, 0, 0, 0)
